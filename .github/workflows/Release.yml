name: Release

permissions:
  contents: write

on:
  workflow_dispatch:

env:
  flutter_channel: 'stable'
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  RUST_TOOLCHAIN: nightly-2024-12-02

jobs:

  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - check_release
      - build_release_assets
      - send_to_community
    steps:
      - run: exit 0

  check_release:
    name: Check release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: 'master'
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Check release
        run: |
          cd ci
          go run ./cmd/check_release

  build_release_assets:
    name: Build release assets
    needs:
      - check_release
    strategy:
      fail-fast: false
      matrix:
        config:
          - target: windows
            host: windows-latest
            flutter_version: '2.10.3'
            go_version: '1.17'
          - target: macos
            host: macos-latest
            flutter_version: '2.10.3'
            go_version: '1.17'
          - target: linux
            host: ubuntu-latest
            flutter_version: '2.10.3'
            go_version: '1.17'
          - target: ios
            host: macos-latest
            flutter_version: '3.10.5'
            go_version: '1.23'
#          - target: ios
#            host: macos-latest
#            flutter_version: '2.10.5'
#            go_version: '1.23'
          - target: android-arm32
            host: ubuntu-latest
            flutter_version: '3.10.5'
            go_version: '1.23'
          - target: android-arm64
            host: ubuntu-latest
            flutter_version: '3.10.5'
            go_version: '1.23'
          - target: android-x86_64
            host: ubuntu-latest
            flutter_version: '3.10.5'
            go_version: '1.23'
          - target: android-arm32
            host: ubuntu-latest
            flutter_version: '2.10.5'
            go_version: '1.23'
          - target: android-arm64
            host: ubuntu-latest
            flutter_version: '2.10.5'
            go_version: '1.23'
          - target: android-x86_64
            host: ubuntu-latest
            flutter_version: '2.10.5'
            go_version: '1.23'

    runs-on: ${{ matrix.config.host }}

    env:
      TARGET: ${{ matrix.config.target }}
      flutter_version: ${{ matrix.config.flutter_version }}
      go_version: ${{ matrix.config.go_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}

      - name: Cache go modules (Linux/Android)
        if: matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' || matrix.config.target == 'linux'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache go modules (macOS/ios)
        if: matrix.config.target == 'macos' || matrix.config.target == 'ios'
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache go modules (Windows)
        if: matrix.config.target == 'windows'
        uses: actions/cache@v3
        with:
          path: |
            ~\AppData\Local\go-build
            ~\go\pkg\mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - id: check_asset
        name: Check asset
        run: |
          cd ci
          go run ./cmd/check_asset

      - name: Setup flutter
        if: steps.check_asset.outputs.skip_build != 'true'
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
          architecture: x64

      - name: Install rust toolchain
        if: steps.check_asset.outputs.skip_build != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: Check core
        if: steps.check_asset.outputs.skip_build != 'true'
        uses: actions/checkout@v3
        with:
          repository: 'niuhuan/wax-go-core'
          token: ${{ secrets.GH_TOKEN }}
          path: 'go'

      - name: Cache Flutter dependencies (Linux/Android)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' || matrix.config.target == 'linux' )
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter

      - name: Cache Flutter dependencies (Mac host)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'ios' || matrix.config.target == 'macos' )
        uses: actions/cache@v3
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.os }}-flutter

      - name: Cache Gradle dependencies (Android)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup java (Android)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'

      - if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
        name: Setup android tools (Android)
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 8512546
          packages: 'platform-tools platforms;android-32 build-tools;30.0.2'

      # - if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
      #   name: Install NDK
      #   run: sdkmanager "ndk;28.0.13004108"
  
      - name: Setup msys2 (Windows)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'windows'
        uses: msys2/setup-msys2@v2
        with:
          install: gcc make

      - name: Install dependencies (Linux)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'linux'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          curl -JOL https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod a+x appimagetool-x86_64.AppImage
          mkdir -p ${GITHUB_WORKSPACE}/bin
          mv appimagetool-x86_64.AppImage ${GITHUB_WORKSPACE}/bin/appimagetool
          echo ::add-path::${GITHUB_WORKSPACE}/bin
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev xorg-dev libfuse2

      - name: Install hover (desktop)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'linux' || matrix.config.target == 'windows' || matrix.config.target == 'macos')
        run: |
          go install github.com/go-flutter-desktop/hover@latest
          cd go
          go get -u github.com/ihciah/rust2go/asmcall
          go mod tidy
          cd ..

      - name: Install go mobile (mobile)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'ios' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-arm32' || matrix.config.target == 'android-x86_64' )
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          cd go
          go get -u github.com/ihciah/rust2go/asmcall
          go mod tidy
          gomobile init
          go get golang.org/x/mobile/bind
          cd ..

      - name: Set-Version (All)
        if: steps.check_asset.outputs.skip_build != 'true'
        run: |
          cd ci
          cp version.code.txt ../lib/assets/version.txt

      - name: Upgrade deps version (flutter2 non-mac)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.host != 'macos-latest' && startsWith(matrix.config.flutter_version, '2')
        run: |
          sed -i "s/another_xlider: ^1.0.1+2/another_xlider: 1.0.1+2/g" pubspec.yaml
          sed -i "s/flutter_styled_toast: ^2.0.0/flutter_styled_toast: 2.0.0/g" pubspec.yaml
          sed -i "s/filesystem_picker: ^3.0.0-beta.1/filesystem_picker: 2.0.0/g" pubspec.yaml
          sed -i "s/file_picker: ^5.2.1/file_picker: 4.6.1/g" pubspec.yaml
          sed -i "s/multi_select_flutter: ^4.0.0/multi_select_flutter: 4.1.2/g" pubspec.yaml
          sed -i "s/modal_bottom_sheet: ^3.0.0-pre/modal_bottom_sheet: 2.0.1/g" pubspec.yaml
          sed -i "s/photo_view: ^0.14.0/photo_view: 0.13.0/g" pubspec.yaml
          flutter pub get

      - name: Upgrade deps version (flutter2 mac)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.host == 'macos-latest' && startsWith(matrix.config.flutter_version, '2')
        run: |
          brew install gnu-sed
          gsed -i "s/another_xlider: ^1.0.1+2/another_xlider: 1.0.1+2/g" pubspec.yaml
          gsed -i "s/flutter_styled_toast: ^2.0.0/flutter_styled_toast: 2.0.0/g" pubspec.yaml
          gsed -i "s/filesystem_picker: ^3.0.0-beta.1/filesystem_picker: 2.0.0/g" pubspec.yaml
          gsed -i "s/file_picker: ^5.2.1/file_picker: 4.6.1/g" pubspec.yaml
          gsed -i "s/multi_select_flutter: ^4.0.0/multi_select_flutter: 4.1.2/g" pubspec.yaml
          gsed -i "s/multi_select_flutter: ^4.0.0/multi_select_flutter: 4.1.2/g" pubspec.yaml
          gsed -i "s/modal_bottom_sheet: ^3.0.0-pre/modal_bottom_sheet: 2.0.1/g" pubspec.yaml
          flutter pub get

      - name: Build (windows)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'windows'
        run: |
          hover build windows
          curl -JOL https://github.com/ComicSparks/build-tools/releases/download/storage/Resource_Hacker_5.1.8.zip
          Expand-Archive .\Resource_Hacker_5.1.8.zip
          cmd /c "Resource_Hacker_5.1.8\ResourceHacker.exe" -open go\build\outputs\windows-release\wax.exe -save go\build\outputs\windows-release\wax.exe -action addskip -res go/assets/icon.ico -mask ICONGROUP,MAINICON,0
          cd go\build\outputs\windows-release
          DEL flutter_engine.pdb
          DEL flutter_engine.exp
          DEL flutter_engine.lib
          Compress-Archive * ../../../../build/build.zip

      - name: Build (macos)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'macos'
        run: |
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --manifest-path wast/Cargo.toml --features= --lib --release --target=x86_64-apple-darwin
          cargo build --manifest-path wast/Cargo.toml --features= --lib --release --target=aarch64-apple-darwin
          lipo -create -output macos/libwast.a wast/target/x86_64-apple-darwin/release/libwast.a  wast/target/aarch64-apple-darwin/release/libwast.a
          hover build darwin-dmg
          mv go/build/outputs/darwin-dmg-release/*.dmg build/build.dmg

      - name: Build (linux)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'linux'
        run: |
          rustup target add x86_64-unknown-linux-gnu
          cargo build --manifest-path wast/Cargo.toml --features= --lib --release --target=x86_64-unknown-linux-gnu
          curl -JOL https://github.com/junmer/source-han-serif-ttf/raw/master/SubsetTTF/CN/SourceHanSerifCN-Regular.ttf
          mkdir -p fonts
          mv SourceHanSerifCN-Regular.ttf fonts/Roboto.ttf
          cat ci/linux_font.yaml >> pubspec.yaml
          hover build linux-appimage
          mv go/build/outputs/linux-appimage-release/*.AppImage build/build.AppImage

      - name: Build (ios)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'ios'
        run: |
          rustup target add aarch64-apple-ios
          cargo build --manifest-path wast/Cargo.toml --features= --lib --release --target=aarch64-apple-ios
          cp wast/target/aarch64-apple-ios/release/libwast.a ios/
          sh scripts/build-ipa.sh

      - name: Build (android-arm32)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'android-arm32'
        run: |
          rustup target add armv7-linux-androideabi
          cd wast
          cargo ndk -o ../android/app/src/main/jniLibs -t armeabi-v7a build
          cd ..
          sh scripts/build-apk-arm.sh

      - name: Build (android-arm64)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'android-arm64'
        run: |
          rustup target add aarch64-linux-android
          cd wast
          cargo ndk -o ../android/app/src/main/jniLibs -t arm64-v8a build
          cd ..
          sh scripts/build-apk-arm64.sh

      - name: Build (android-x86_64)
        if: steps.check_asset.outputs.skip_build != 'true' && matrix.config.target == 'android-x86_64'
        run: |
          rustup target add x86_64-linux-android
          cd wast
          cargo ndk -o ../android/app/src/main/jniLibs -t x86_64 build
          cd ..
          sh scripts/build-apk-x64.sh

      - name: Sign APK (Android)
        if: steps.check_asset.outputs.skip_build != 'true' && ( matrix.config.target == 'android-arm32' || matrix.config.target == 'android-arm64' || matrix.config.target == 'android-x86_64' )
        env:
          KEY_FILE_BASE64: ${{ secrets.KEY_FILE_BASE64 }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          sh scripts/sign-apk-github-actions.sh

      - name: Upload Asset (All)
        if: steps.check_asset.outputs.skip_build != 'true'
        run: |
          cd ci
          go run ./cmd/upload_asset


  send_to_community:
    needs:
      - check_release
      - build_release_assets
    name: Send message to community
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: 'master'
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-


